---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: harbor-creator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: harbor-creator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: harbor-creator
    namespace: kube-system
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: harbor-storage
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: harbor-api-diagram
  namespace: kube-system
data:
  api-diagram.json: |
    [
      {
        "name": "/debug",
        "path": [
          {
            "name": "/vnf",
            "path": [
              {
                "name": "/launch/:id",
                "type": "get",
                "function": "org.augugrumi.harbor.routes.vnfm.VnfLauncherRoute"
              },
              {
                "name": "/stop/:id",
                "type": "get",
                "function": "org.augugrumi.harbor.routes.vnfm.VnfStopperRoute"
              },
              {
                "name": "/update/:id",
                "type": "post",
                "function": "org.augugrumi.harbor.routes.nfvo.catalog.UpdateVnfRoute"
              }
            ]
          }
        ]
      },
      {
        "name": "/vnf",
        "path": [
          {
            "name": "/catalog/:id",
            "type": "get",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.GetVnfRoute"
          },
          {
            "name": "/catalog/:id",
            "type": "post",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.CreateVnfRoute"
          },
          {
            "name": "/catalog/:id",
            "type": "delete",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.DeleteVnfRoute"
          },
          {
            "name": "/catalog/",
            "type": "get",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.ListVnfsRoute"
          }
        ]
      },
      {
        "name": "/ns",
        "path": [
          {
            "name": "/catalog/:id",
            "type": "post",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.CreateNSRoute"
          },
          {
            "name": "/catalog/:id",
            "type": "get",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.GetNSRoute"
          },
          {
            "name": "/catalog/:id",
            "type": "delete",
            "function": "org.augugrumi.harbor.routes.nfvo.catalog.DeleteNSRoute"
          },
          {
            "name": "/launch/:id",
            "type": "get",
            "function": "org.augugrumi.harbor.routes.nfvo.nsm.NsLauncherRoute"
          },
          {
            "name": "/stop/:id",
            "type": "get",
            "function": "org.augugrumi.harbor.routes.nfvo.nsm.NsStopperRoute"
          }
        ]
      }
    ]
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: harbor-creator-deployment
  namespace: kube-system
  labels:
    k8s-app: harbor-creator
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: harbor-creator
  template:
    metadata:
      labels:
        k8s-app: harbor-creator
        name: harbor-creator
    spec:
      containers:
        - name: harbor
          image: augugrumi/harbor:kubernetes_integration
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: harbor-config
              mountPath: /config
            - name: harbor-storage
              mountPath: /data
          env:
            - name: HARBOR_API_CONFIG
              value: /config/api-diagram.json
            - name: HARBOR_STORAGE_PATH
              value: /data
      volumes:
        - name: harbor-config
          configMap:
            name: harbor-api-diagram
        - name: harbor-storage
          persistentVolumeClaim:
            claimName: harbor-storage
---
kind: Service
apiVersion: v1
metadata:
  name: harbor-creator-service
  namespace: kube-system
spec:
  selector:
    k8s-app: harbor-creator
  ports:
    - protocol: TCP
      port: 80
      name: web
  type: NodePort
